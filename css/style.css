body {
    background-color: purple;
}
/* 1.Чтобы откатиться назад в программе- GitHub Desktop в History нажимаем правой кнопкой мыши и выбираем- Revent changes in commit и мы возвращаемся на шаг назад. Чтобы отменить и этот шаг(тоесть отменить наше возвращение на шаг назад, сделать как было перед этим когда мы ещё не откатывались на шаг назад), то мы наводя в History на последнюю изменённую нами историю и также нажимаем правой кнопкой мыши и выбираем тоже самое- Revent changes in commit, и наш отменённый шаг этим же методом отменится и всё станет как было перед этим. Тоесть- Revent changes in commit отменяет предыдущий шаг и мы откатываемся на шаг назад и происходят изменения также в vs_code.   */
/* 2.Чтобы слить две ветки между собой(тоесть слить изменения) для этого просто в этой же программе там где наши ветки заходим сверху в- Branch и там выбираем- Create pull request,- тоесть мы создадим новый- pull request. Там можно выбрать какую ветку с какой нам нужно слить вместе*/
        /* Продолжить урок с третьего видео */
/* 3.Создам папку на своём ПК с названием project_1 где-то рядом с папкой проекта- GitHub > github-project-new. Предположим эта папка- project_1 для наших проектов. Эта папка пуста, её нужно открыть в терминале, для этого запускаем терминал и в нём переходим в папку- project_1. Сейчас мы находимся в обычной папке, по этому вводим в терминале команду cd (перевод- change directory),- ставим пробел,- берём нашу папку- project_1 и перетягиваем в терминал GitBash, таким образом мы укажем путь к нашей папке,- жмём Enter и теперь мы будем находится в нашей папке.Теперь если мы введём команду- ls или dir(для windows) то это значит что эта папка пустая, в ней ничего нет.*/
/* 4.Теперь нам необходимо склонировать наш Репозиторий. Есть несколько способов его склонировать в GitHub, можно это сделать при помощи HTTPS,- но тогда мы столкнёмся с кучей проблем когда нужно будет например поменять пользователей, у нас будет несколько репозиториев, тогда придётся это всё менять.Визуально HTTPS делается легче, но мы будем использовать не- HTTPS а сразу использовать соединение при помощи- SSH, тоесть мы будем генерить специальные SSH ключи(как использовать подключение через SSH есть отдельная информация в сети нажав на знак вопроса в GitHub можно её найти. Раздел называется- "Создание нового ключа SSH и его добавление в ssh-agent"- здесь есть коменды которые нам нужно вводить.- Подробно: открываем терминал,- вставляем команду со своим емейлом-  ssh-keygen -t ed25519 -C "your_email@example.com" (-меняем емейл на свой. Находим емейл который привязан к этому аккаунту в профиле GitHub в настройках- Settings в разделе- Emeils),- встявляем команду в терминал, меняем емейл на свой, жмём Enter и генерируется файл. ... ) */
            /* Продолжить с 3:51 */
            